//
//  ConsumerMobile
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "NSDate+extension.h"
#import "Cashback.h"
#import "SortByEnum.h"
#import "SortByEnumHelper.h"
#import "ErrorErrorException.h"

@interface CashbackController : BaseController

/**
* Completion block definition for asynchronous call to getcashbacks */
typedef void (^CompletedGetcashbacks)(BOOL success, HttpContext* context, NSArray<Cashback> * response, NSError* error);

/**
* List of cashbacks.
* @param    limit    Optional parameter: Amount of records to return
* @param    startingAfter    Optional parameter: The Object ID from which to continue obtaining items from the list
* @param    endingBefore    Optional parameter: The Object ID from which to definitely end the list segment
* @param    q    Optional parameter: main query parameter
* @param    sortBy    Optional parameter: main sort parameter
*/
- (void) getcashbacksAsyncWithLimit:(NSNumber*) limit
                startingAfter:(NSNumber*) startingAfter
                endingBefore:(NSNumber*) endingBefore
                q:(NSString*) q
                sortBy:(enum SortByEnum) sortBy
                completionBlock:(CompletedGetcashbacks) onCompleted;

/**
* Completion block definition for asynchronous call to addcashback */
typedef void (^CompletedPostAddcashback)(BOOL success, HttpContext* context, NSArray<Cashback> * response, NSError* error);

/**
* Create a new cashback
* @param    body    Optional parameter: Example: 
*/
- (void) addcashbackAsyncWithBody:(Cashback*) body
                completionBlock:(CompletedPostAddcashback) onCompleted;

/**
* Completion block definition for asynchronous call to getcashback */
typedef void (^CompletedGetcashback)(BOOL success, HttpContext* context, NSArray<Cashback> * response, NSError* error);

/**
* Obtain a single cashback by id
* @param    mid    Required parameter: Numeric ID of the cashback to get
*/
- (void) getcashbackAsyncWithId:(NSUUID*) mid
                completionBlock:(CompletedGetcashback) onCompleted;

/**
* Completion block definition for asynchronous call to deletecashback */
typedef void (^CompletedDeletecashback)(BOOL success, HttpContext* context, NSArray<Cashback> * response, NSError* error);

/**
* Deletes a cashback
* @param    mid    Required parameter: ID of the cashback to delete
*/
- (void) deletecashbackAsyncWithId:(int) mid
                completionBlock:(CompletedDeletecashback) onCompleted;

/**
* Completion block definition for asynchronous call to updatecashback */
typedef void (^CompletedPatchUpdatecashback)(BOOL success, HttpContext* context, NSArray<Cashback> * response, NSError* error);

/**
* Update an existing cashback
* @param    mid    Required parameter: Numeric ID of the cashback to update
* @param    body    Optional parameter: Example: 
*/
- (void) updatecashbackAsyncWithId:(NSUUID*) mid
                body:(Cashback*) body
                completionBlock:(CompletedPatchUpdatecashback) onCompleted;

@end