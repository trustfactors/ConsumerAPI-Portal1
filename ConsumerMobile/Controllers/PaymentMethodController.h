//
//  ConsumerMobile
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "NSDate+extension.h"
#import "PaymentMethod.h"
#import "SortByEnum.h"
#import "SortByEnumHelper.h"
#import "ErrorErrorException.h"

@interface PaymentMethodController : BaseController

/**
* Completion block definition for asynchronous call to getpayment_methods */
typedef void (^CompletedGetpaymentMethods)(BOOL success, HttpContext* context, NSArray<PaymentMethod> * response, NSError* error);

/**
* List of payment_methods.
* @param    limit    Optional parameter: Amount of records to return
* @param    startingAfter    Optional parameter: The Object ID from which to continue obtaining items from the list
* @param    endingBefore    Optional parameter: The Object ID from which to definitely end the list segment
* @param    q    Optional parameter: main query parameter
* @param    sortBy    Optional parameter: main sort parameter
*/
- (void) getpaymentMethodsAsyncWithLimit:(NSNumber*) limit
                startingAfter:(NSNumber*) startingAfter
                endingBefore:(NSNumber*) endingBefore
                q:(NSString*) q
                sortBy:(enum SortByEnum) sortBy
                completionBlock:(CompletedGetpaymentMethods) onCompleted;

/**
* Completion block definition for asynchronous call to addpayment_method */
typedef void (^CompletedPostAddpaymentMethod)(BOOL success, HttpContext* context, NSArray<PaymentMethod> * response, NSError* error);

/**
* Create a new payment_method
* @param    body    Optional parameter: Example: 
*/
- (void) addpaymentMethodAsyncWithBody:(PaymentMethod*) body
                completionBlock:(CompletedPostAddpaymentMethod) onCompleted;

/**
* Completion block definition for asynchronous call to getpayment_method */
typedef void (^CompletedGetpaymentMethod)(BOOL success, HttpContext* context, NSArray<PaymentMethod> * response, NSError* error);

/**
* Obtain a single payment_method by id
* @param    mid    Required parameter: Numeric ID of the payment_method to get
*/
- (void) getpaymentMethodAsyncWithId:(NSUUID*) mid
                completionBlock:(CompletedGetpaymentMethod) onCompleted;

/**
* Completion block definition for asynchronous call to deletepayment_method */
typedef void (^CompletedDeletepaymentMethod)(BOOL success, HttpContext* context, NSArray<PaymentMethod> * response, NSError* error);

/**
* Deletes a payment_method
* @param    mid    Required parameter: ID of the payment_method to delete
*/
- (void) deletepaymentMethodAsyncWithId:(int) mid
                completionBlock:(CompletedDeletepaymentMethod) onCompleted;

/**
* Completion block definition for asynchronous call to updatepayment_method */
typedef void (^CompletedPatchUpdatepaymentMethod)(BOOL success, HttpContext* context, NSArray<PaymentMethod> * response, NSError* error);

/**
* Update an existing payment_method
* @param    mid    Required parameter: Numeric ID of the payment_method to update
* @param    body    Optional parameter: Example: 
*/
- (void) updatepaymentMethodAsyncWithId:(NSUUID*) mid
                body:(PaymentMethod*) body
                completionBlock:(CompletedPatchUpdatepaymentMethod) onCompleted;

@end