//
//  ConsumerMobile
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "NSDate+extension.h"
#import "Referral.h"
#import "SortByEnum.h"
#import "SortByEnumHelper.h"
#import "ErrorErrorException.h"

@interface ReferralController : BaseController

/**
* Completion block definition for asynchronous call to getreferrals */
typedef void (^CompletedGetreferrals)(BOOL success, HttpContext* context, NSArray<Referral> * response, NSError* error);

/**
* List of referrals.
* @param    limit    Optional parameter: Amount of records to return
* @param    startingAfter    Optional parameter: The Object ID from which to continue obtaining items from the list
* @param    endingBefore    Optional parameter: The Object ID from which to definitely end the list segment
* @param    q    Optional parameter: main query parameter
* @param    sortBy    Optional parameter: main sort parameter
*/
- (void) getreferralsAsyncWithLimit:(NSNumber*) limit
                startingAfter:(NSNumber*) startingAfter
                endingBefore:(NSNumber*) endingBefore
                q:(NSString*) q
                sortBy:(enum SortByEnum) sortBy
                completionBlock:(CompletedGetreferrals) onCompleted;

/**
* Completion block definition for asynchronous call to addreferral */
typedef void (^CompletedPostAddreferral)(BOOL success, HttpContext* context, NSArray<Referral> * response, NSError* error);

/**
* Create a new referral
* @param    body    Optional parameter: Example: 
*/
- (void) addreferralAsyncWithBody:(Referral*) body
                completionBlock:(CompletedPostAddreferral) onCompleted;

/**
* Completion block definition for asynchronous call to getreferral */
typedef void (^CompletedGetreferral)(BOOL success, HttpContext* context, NSArray<Referral> * response, NSError* error);

/**
* Obtain a single referral by id
* @param    mid    Required parameter: Numeric ID of the referral to get
*/
- (void) getreferralAsyncWithId:(NSUUID*) mid
                completionBlock:(CompletedGetreferral) onCompleted;

/**
* Completion block definition for asynchronous call to deletereferral */
typedef void (^CompletedDeletereferral)(BOOL success, HttpContext* context, NSArray<Referral> * response, NSError* error);

/**
* Deletes a referral
* @param    mid    Required parameter: ID of the referral to delete
*/
- (void) deletereferralAsyncWithId:(int) mid
                completionBlock:(CompletedDeletereferral) onCompleted;

/**
* Completion block definition for asynchronous call to updatereferral */
typedef void (^CompletedPatchUpdatereferral)(BOOL success, HttpContext* context, NSArray<Referral> * response, NSError* error);

/**
* Update an existing referral
* @param    mid    Required parameter: Numeric ID of the referral to update
* @param    body    Optional parameter: Example: 
*/
- (void) updatereferralAsyncWithId:(NSUUID*) mid
                body:(Referral*) body
                completionBlock:(CompletedPatchUpdatereferral) onCompleted;

@end