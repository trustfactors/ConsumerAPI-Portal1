//
//  ConsumerMobile
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "NSDate+extension.h"
#import "Fraud.h"
#import "SortByEnum.h"
#import "SortByEnumHelper.h"
#import "ErrorErrorException.h"

@interface FraudController : BaseController

/**
* Completion block definition for asynchronous call to getfrauds */
typedef void (^CompletedGetfrauds)(BOOL success, HttpContext* context, NSArray<Fraud> * response, NSError* error);

/**
* List of frauds.
* @param    limit    Optional parameter: Amount of records to return
* @param    startingAfter    Optional parameter: The Object ID from which to continue obtaining items from the list
* @param    endingBefore    Optional parameter: The Object ID from which to definitely end the list segment
* @param    q    Optional parameter: main query parameter
* @param    sortBy    Optional parameter: main sort parameter
*/
- (void) getfraudsAsyncWithLimit:(NSNumber*) limit
                startingAfter:(NSNumber*) startingAfter
                endingBefore:(NSNumber*) endingBefore
                q:(NSString*) q
                sortBy:(enum SortByEnum) sortBy
                completionBlock:(CompletedGetfrauds) onCompleted;

/**
* Completion block definition for asynchronous call to addfraud */
typedef void (^CompletedPostAddfraud)(BOOL success, HttpContext* context, NSArray<Fraud> * response, NSError* error);

/**
* Create a new fraud
* @param    body    Optional parameter: Example: 
*/
- (void) addfraudAsyncWithBody:(Fraud*) body
                completionBlock:(CompletedPostAddfraud) onCompleted;

/**
* Completion block definition for asynchronous call to getfraud */
typedef void (^CompletedGetfraud)(BOOL success, HttpContext* context, NSArray<Fraud> * response, NSError* error);

/**
* Obtain a single fraud by id
* @param    mid    Required parameter: Numeric ID of the fraud to get
*/
- (void) getfraudAsyncWithId:(NSUUID*) mid
                completionBlock:(CompletedGetfraud) onCompleted;

/**
* Completion block definition for asynchronous call to deletefraud */
typedef void (^CompletedDeletefraud)(BOOL success, HttpContext* context, NSArray<Fraud> * response, NSError* error);

/**
* Deletes a fraud
* @param    mid    Required parameter: ID of the fraud to delete
*/
- (void) deletefraudAsyncWithId:(int) mid
                completionBlock:(CompletedDeletefraud) onCompleted;

/**
* Completion block definition for asynchronous call to updatefraud */
typedef void (^CompletedPatchUpdatefraud)(BOOL success, HttpContext* context, NSArray<Fraud> * response, NSError* error);

/**
* Update an existing fraud
* @param    mid    Required parameter: Numeric ID of the fraud to update
* @param    body    Optional parameter: Example: 
*/
- (void) updatefraudAsyncWithId:(NSUUID*) mid
                body:(Fraud*) body
                completionBlock:(CompletedPatchUpdatefraud) onCompleted;

@end