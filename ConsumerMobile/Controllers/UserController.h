//
//  ConsumerMobile
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "NSDate+extension.h"
#import "User.h"
#import "SortByEnum.h"
#import "SortByEnumHelper.h"
#import "ErrorErrorException.h"

@interface UserController : BaseController

/**
* Completion block definition for asynchronous call to getusers */
typedef void (^CompletedGetusers)(BOOL success, HttpContext* context, NSArray<User> * response, NSError* error);

/**
* List of users.
* @param    limit    Optional parameter: Amount of records to return
* @param    startingAfter    Optional parameter: The Object ID from which to continue obtaining items from the list
* @param    endingBefore    Optional parameter: The Object ID from which to definitely end the list segment
* @param    q    Optional parameter: main query parameter
* @param    sortBy    Optional parameter: main sort parameter
*/
- (void) getusersAsyncWithLimit:(NSNumber*) limit
                startingAfter:(NSNumber*) startingAfter
                endingBefore:(NSNumber*) endingBefore
                q:(NSString*) q
                sortBy:(enum SortByEnum) sortBy
                completionBlock:(CompletedGetusers) onCompleted;

/**
* Completion block definition for asynchronous call to adduser */
typedef void (^CompletedPostAdduser)(BOOL success, HttpContext* context, NSArray<User> * response, NSError* error);

/**
* Create a new user
* @param    body    Optional parameter: Example: 
*/
- (void) adduserAsyncWithBody:(User*) body
                completionBlock:(CompletedPostAdduser) onCompleted;

/**
* Completion block definition for asynchronous call to getuser */
typedef void (^CompletedGetuser)(BOOL success, HttpContext* context, NSArray<User> * response, NSError* error);

/**
* Obtain a single user by id
* @param    mid    Required parameter: Numeric ID of the user to get
*/
- (void) getuserAsyncWithId:(NSUUID*) mid
                completionBlock:(CompletedGetuser) onCompleted;

/**
* Completion block definition for asynchronous call to deleteuser */
typedef void (^CompletedDeleteuser)(BOOL success, HttpContext* context, NSArray<User> * response, NSError* error);

/**
* Deletes a user
* @param    mid    Required parameter: ID of the user to delete
*/
- (void) deleteuserAsyncWithId:(int) mid
                completionBlock:(CompletedDeleteuser) onCompleted;

/**
* Completion block definition for asynchronous call to updateuser */
typedef void (^CompletedPatchUpdateuser)(BOOL success, HttpContext* context, NSArray<User> * response, NSError* error);

/**
* Update an existing user
* @param    mid    Required parameter: Numeric ID of the user to update
* @param    body    Optional parameter: Example: 
*/
- (void) updateuserAsyncWithId:(NSUUID*) mid
                body:(User*) body
                completionBlock:(CompletedPatchUpdateuser) onCompleted;

@end