//
//  ConsumerMobile
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "NSDate+extension.h"
#import "ScheduledPayment.h"
#import "SortByEnum.h"
#import "SortByEnumHelper.h"
#import "ErrorErrorException.h"

@interface ScheduledPaymentController : BaseController

/**
* Completion block definition for asynchronous call to getscheduled_payments */
typedef void (^CompletedGetscheduledPayments)(BOOL success, HttpContext* context, NSArray<ScheduledPayment> * response, NSError* error);

/**
* List of scheduled_payments.
* @param    limit    Optional parameter: Amount of records to return
* @param    startingAfter    Optional parameter: The Object ID from which to continue obtaining items from the list
* @param    endingBefore    Optional parameter: The Object ID from which to definitely end the list segment
* @param    q    Optional parameter: main query parameter
* @param    sortBy    Optional parameter: main sort parameter
*/
- (void) getscheduledPaymentsAsyncWithLimit:(NSNumber*) limit
                startingAfter:(NSNumber*) startingAfter
                endingBefore:(NSNumber*) endingBefore
                q:(NSString*) q
                sortBy:(enum SortByEnum) sortBy
                completionBlock:(CompletedGetscheduledPayments) onCompleted;

/**
* Completion block definition for asynchronous call to addscheduled_payment */
typedef void (^CompletedPostAddscheduledPayment)(BOOL success, HttpContext* context, NSArray<ScheduledPayment> * response, NSError* error);

/**
* Create a new scheduled_payment
* @param    body    Optional parameter: Example: 
*/
- (void) addscheduledPaymentAsyncWithBody:(ScheduledPayment*) body
                completionBlock:(CompletedPostAddscheduledPayment) onCompleted;

/**
* Completion block definition for asynchronous call to getscheduled_payment */
typedef void (^CompletedGetscheduledPayment)(BOOL success, HttpContext* context, NSArray<ScheduledPayment> * response, NSError* error);

/**
* Obtain a single scheduled_payment by id
* @param    mid    Required parameter: Numeric ID of the scheduled_payment to get
*/
- (void) getscheduledPaymentAsyncWithId:(NSUUID*) mid
                completionBlock:(CompletedGetscheduledPayment) onCompleted;

/**
* Completion block definition for asynchronous call to deletescheduled_payment */
typedef void (^CompletedDeletescheduledPayment)(BOOL success, HttpContext* context, NSArray<ScheduledPayment> * response, NSError* error);

/**
* Deletes a scheduled_payment
* @param    mid    Required parameter: ID of the scheduled_payment to delete
*/
- (void) deletescheduledPaymentAsyncWithId:(int) mid
                completionBlock:(CompletedDeletescheduledPayment) onCompleted;

/**
* Completion block definition for asynchronous call to updatescheduled_payment */
typedef void (^CompletedPatchUpdatescheduledPayment)(BOOL success, HttpContext* context, NSArray<ScheduledPayment> * response, NSError* error);

/**
* Update an existing scheduled_payment
* @param    mid    Required parameter: Numeric ID of the scheduled_payment to update
* @param    body    Optional parameter: Example: 
*/
- (void) updatescheduledPaymentAsyncWithId:(NSUUID*) mid
                body:(ScheduledPayment*) body
                completionBlock:(CompletedPatchUpdatescheduledPayment) onCompleted;

@end