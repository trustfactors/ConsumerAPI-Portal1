//
//  ConsumerMobile
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#include "TransactionTypeEnumHelper.h"

/**
* Helper class implementation for TransactionTypeEnum to NSString conversion
*/
@implementation TransactionTypeEnumHelper

+(id) stringFromTransactionTypeEnum:(enum TransactionTypeEnum) transactionTypeEnum withDefault: (id) defaultValue
{
    switch(transactionTypeEnum)
    {
        case TransactionTypeEnumRegularPurchase:
            return @"Regular Purchase";

        case TransactionTypeTemp:
            return @"Temp";

        default:
            return defaultValue;
    }
}

+(NSArray<NSString*>*) stringArrayFromTransactionTypeEnumArray:(NSArray<NSNumber*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSNumber* numberValue in array){
        NSNumber* stringValue = [TransactionTypeEnumHelper stringFromTransactionTypeEnum:(enum TransactionTypeEnum) numberValue.intValue withDefault:[NSNull null]];
        [enums addObject:stringValue];
    }
    return [enums copy];
}

+(enum TransactionTypeEnum) transactionTypeEnumFromString:(NSString*) strValue
{
    NSArray* TransactionTypeEnumArray = [NSArray arrayWithObjects:
                                        @"Regular Purchase",
                                        @"Temp",
                                        nil];

    return (enum TransactionTypeEnum) [TransactionTypeEnumArray indexOfObject: strValue];
}


+(NSArray<NSNumber*>*) transactionTypeEnumArrayFromStringArray:(NSArray<NSString*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSString* enumValue in array){
        NSNumber* numberValue = [NSNumber numberWithInt:[ TransactionTypeEnumHelper transactionTypeEnumFromString:enumValue]];
        [enums addObject:numberValue];
    }
    return [enums copy];
}

@end