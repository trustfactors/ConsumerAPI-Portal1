//
//  ConsumerMobile
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import "DebitCard.h"

@implementation DebitCard

/**
* TODO: Write general description for this method
*/
@synthesize mid;

/**
* TODO: Write general description for this method
*/
@synthesize number;

/**
* TODO: Write general description for this method
*/
@synthesize expiration;

/**
* TODO: Write general description for this method
*/
@synthesize firstName;

/**
* TODO: Write general description for this method
*/
@synthesize middleName;

/**
* TODO: Write general description for this method
*/
@synthesize lastName;

/**
* TODO: Write general description for this method
*/
@synthesize phoneNumber;

/**
* TODO: Write general description for this method
*/
@synthesize address;

/**
* TODO: Write general description for this method
*/
@synthesize address2;

/**
* TODO: Write general description for this method
*/
@synthesize city;

/**
* TODO: Write general description for this method
*/
@synthesize state;

/**
* TODO: Write general description for this method
*/
@synthesize country;

/**
* TODO: Write general description for this method
*/
@synthesize dateIssued;

/**
* TODO: Write general description for this method
*/
@synthesize frozen;

-(id)init
{
    if (self = [super init])
    {
        self.frozen = NO;
    }
    return self;
}

 /**
 * For serialization of enum StateEnum type property as NSString*
 */
-(id) JSONObjectForState
{
     
    return [StateEnumHelper stringFromStateEnum:(enum StateEnum) state withDefault: nil];

}

/**
 * For deserialization of enum StateEnum type property from NSString*
 */
 
-(void)setStateWithNSString:(NSString*) strValue
{
    state = [StateEnumHelper stateEnumFromString:(NSString*) strValue];
}




/**
* Key mappings for the json serialization and deserialization
*/
+(NSDictionary*) keyMap
{
    NSMutableDictionary* map = [[NSMutableDictionary alloc] init];
    [map addEntriesFromDictionary: @{
        @"id": @"mid",
        @"number": @"number",
        @"expiration": @"expiration",
        @"first_name": @"firstName",
        @"middle_name": @"middleName",
        @"last_name": @"lastName",
        @"phone_number": @"phoneNumber",
        @"address": @"address",
        @"address2": @"address2",
        @"city": @"city",
        @"state": @"state",
        @"country": @"country",
        @"date_issued": @"dateIssued",
        @"frozen": @"frozen"  
    }];

    return map;
}

/**
* Key mapper for json serialization and deserialization
*/
+(JSONKeyMapper*) keyMapper
{ 
  return [[JSONKeyMapper alloc] initWithDictionary: [self keyMap]];
}

/**
* Helps avoiding deserialization errors when one or more properties are missing
* @returns	True, indicating that all properties are optional for deserialization
*/
+(BOOL)propertyIsOptional:(NSString*) propertyName
{
    return YES;
}

@end